@page "/service/{Id}"

@using System.Threading.Tasks
@inject NavigationManager Navigation

<h3>Connect Service Id: @Id</h3>

@if (_isScanning)
{
    <div class="spinner-border text-primary" role="status">
        <span class="visually-hidden">Scanning...</span>
    </div>
}

<ul>
    @foreach (var characteristic in _characteristics.Where(d => d != ""))
    {
        <button class="btn btn-link" @onclick="() => ReadCharacteristic(Id,characteristic)">@characteristic</button>
    }
</ul>

@code {
    [Parameter]
    public string Id { get; set; }

    private List<string> _characteristics = new List<string>();

    private BluetoothService _bluetoothService;

    private bool _isScanning = false;

    protected override async void OnInitialized()
    {
        if (Id == null)
        {
            Id = Id ?? "No service Id specified";
            await Task.Delay(1000); // Sleep for 1 second
            Navigation.NavigateTo("/bluetooth");
        }
        else
        {
            // Connect to the device
            _bluetoothService = new BluetoothService();
            _isScanning = true;
            await _bluetoothService.GetCharacteristicsAsync(Id, _characteristics);
            _isScanning = false;
            StateHasChanged();
        }
    }

    private void ReadCharacteristic(string serviceId, string characteristicId)
    {
        Navigation.NavigateTo($"/Characteristic/{serviceId}/{characteristicId}");       // To be implemented: Service.razor
    }
}
